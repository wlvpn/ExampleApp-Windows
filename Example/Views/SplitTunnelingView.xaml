<UserControl x:Class="Example.Views.SplitTunnelingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             d:DesignHeight="450"
             d:DesignWidth="800"
             mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <CheckBox x:Name="splitTunnelToggle"
                  Height="30"
                  Margin="10,0,0,0"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  VerticalContentAlignment="Center"
                  Content="Enable Split Tunneling"
                  IsEnabled="{Binding SDK.IsConnected, Converter={StaticResource BooleanInverseConverter}}"
                  IsChecked="{Binding IsSplitTunnelingOn}" />
        <TabControl x:Name="tbMain"
                    Grid.Row="1"
                    Margin="10,10">
            <TabItem Header="Domains">
                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.64*" />
                        <RowDefinition Height="0.15*" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <DataGrid x:Name="dgDomains"
                              AutoGenerateColumns="False"
                              CanUserAddRows="True"
                              CanUserDeleteRows="True"
                              ItemsSource="{Binding Domains, Mode=TwoWay}">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Width="*" Header="Domain">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Margin="5,0"
                                                   Focusable="False"
                                                   IsHitTestVisible="False"
                                                   Text="{Binding DomainName}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Width="Auto" Header="Include Subdomains">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox HorizontalAlignment="Center" IsChecked="{Binding IncludeAllSubdomains}">
                                            <behaviors:Interaction.Triggers>
                                                <behaviors:EventTrigger EventName="Checked">
                                                    <behaviors:InvokeCommandAction Command="{Binding Path=DataContext.IncludeSubDomainsCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding}" />
                                                </behaviors:EventTrigger>
                                                <behaviors:EventTrigger EventName="Unchecked">
                                                    <behaviors:InvokeCommandAction Command="{Binding Path=DataContext.ExcludeSubDomainsCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding}" />
                                                </behaviors:EventTrigger>
                                            </behaviors:Interaction.Triggers>
                                        </CheckBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Width="70" Header="">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Command="{Binding Path=DataContext.DeleteDomainCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                CommandParameter="{Binding}"
                                                Content="Delete" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                    <StackPanel Grid.Row="1"
                                Margin="0,5,10,5"
                                HorizontalAlignment="Left"
                                Orientation="Horizontal">
                        <TextBox x:Name="tbDomain"
                                 Width="200"
                                 Height="30"
                                 Margin="0,0,10,0"
                                 VerticalAlignment="Center"
                                 VerticalContentAlignment="Center"
                                 Text="{Binding DomainName}" />
                        <Button Width="100"
                                Height="30"
                                Command="{Binding AddDomainCommand}"
                                Content="Add" />
                    </StackPanel>
                    <TextBlock Grid.Row="2" Text="{Binding ValidationError}" />
                    <Border Grid.Row="0"
                            Grid.RowSpan="4"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Opacity=".6"
                            Visibility="{Binding SDK.IsConnected, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Border.Background>
                            <LinearGradientBrush StartPoint=".5,0" EndPoint=".5,1">
                                <GradientStop Offset="0" Color="LightGray" />
                                <GradientStop Offset="1" Color="LightGray" />
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Grid>
            </TabItem>

            <TabItem Header="Applications">
                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.60*" />
                        <RowDefinition Height="0.18*" />
                    </Grid.RowDefinitions>




                    <DataGrid AutoGenerateColumns="False"
                              CanUserAddRows="False"
                              CanUserDeleteRows="False"
                              ItemsSource="{Binding Applications}">
                        <DataGrid.Columns>


                            <DataGridTemplateColumn Width="*" Header="Application">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Margin="5,0"
                                                   Focusable="False"
                                                   IsHitTestVisible="False"
                                                   Text="{Binding Name}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Width="70" Header="">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Command="{Binding Path=DataContext.DeleteApplicationCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                CommandParameter="{Binding}"
                                                Content="Delete" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                    <Button Grid.Row="1"
                            Width="100"
                            Height="30"
                            Margin="0,15"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Command="{Binding PickManuallyCommand}"
                            Content="Pick Manually" />

                    <Border Grid.Row="0"
                            Grid.RowSpan="3"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Opacity=".6"
                            Visibility="{Binding SDK.IsConnected, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Border.Background>
                            <LinearGradientBrush StartPoint=".5,0" EndPoint=".5,1">
                                <GradientStop Offset="0" Color="LightGray" />
                                <GradientStop Offset="1" Color="LightGray" />
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Grid>

            </TabItem>


        </TabControl>
    </Grid>
</UserControl>
